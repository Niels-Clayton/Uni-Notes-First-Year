import ecs100.*;import java.awt.Color;import java.util.*;import java.io.*;public class CircuitEditor{private ArrayList<Component> components = new ArrayList<Component>();private ArrayList<Wire> wires = new ArrayList<Wire>();private Component selectedComponent;private Wire selectedWire;private Component pressedComponent;private Wire pressedWire;private double startX, startY;private String tool = "resistor";private int comp_type = 0;public CircuitEditor(){this.setupGUI();}public void setupGUI(){UI.setMouseListener( this::doMouse );UI.addButton("Clear", this::clearCircuit);UI.addButton("Resistor", this::set_resistor);UI.addButton("Capacitor", this::set_capacitor);UI.addButton("Source", this::set_source);UI.addButton("Connector", this::set_connector);UI.addButton("wire", this::set_wire); UI.addButton("select", this::set_select);UI.addButton("Rotate", this::doRotate);UI.addButton("Delete", this::doDelete);UI.addTextField("Label", this::setLabel);UI.addButton("save", this::saveDrawing);UI.addButton("Load", this::loadDrawing);UI.addButton("Quit", UI::quit);UI.setLineWidth(2);UI.setDivider(0.0);}public void set_wire(){this.tool = "wire";}public void set_resistor(){this.tool = "resistor";}public void set_capacitor(){this.tool = "capacitor";}public void set_source(){ this.tool = "source";}public void set_select(){this.tool = "select"; }public void set_connector(){this.tool = "connector";}public void clearCircuit(){this.components.clear();this.wires.clear();this.redraw();}public void setLabel(String v){if(selectedComponent != null && this.comp_type == 0){selectedComponent.setLabel(v);}else{UI.println("There is no selected component");}this.redraw();}public void doDelete(){if(this.comp_type == 0){if(this.selectedComponent != null){this.components.remove(this.selectedComponent);}}if(this.comp_type == 1){if(this.selectedWire != null){this.wires.remove(this.selectedWire);}}this.redraw();}public void doRotate(){if(this.comp_type == 0){if(this.selectedComponent != null){this.selectedComponent.rotate();}}if(this.comp_type == 1){if(this.selectedWire != null){this.selectedWire.rotate_wire();}}this.redraw();}public void doMouse(String action, double x, double y) {selectedWire = findWireAt(x, y);selectedComponent = findComponentAt(x, y);if(tool.equals("resistor")){if(action.equals("clicked")){this.components.add(new Component("resistor", x, y));this.redraw();Trace.println(this.components.size());}}if(tool.equals("capacitor")){if(action.equals("clicked")){this.components.add(new Component("capacitor", x, y));this.redraw();Trace.println(this.components.size());}}if(tool.equals("source")){if(action.equals("clicked")){this.components.add(new Component("source", x, y));this.redraw();Trace.println(this.components.size());}}if(tool.equals("connector")){if(action.equals("clicked")){this.components.add(new Component("connector", x, y));this.redraw();Trace.println(this.components.size());}}if(tool.equals("select")){if(action.equals("pressed")){if(selectedWire != null){this.comp_type = 1;this.redraw();selectedWire.highlight_wire();this.pressedWire = selectedWire;}if(selectedComponent != null){this.comp_type = 0;this.redraw();selectedComponent.highlight();this.pressedComponent = selectedComponent;}}if(action.equals("released")){if(pressedComponent != null){if((Math.abs(x - this.pressedComponent.x_position()) >20 ||(Math.abs(y - this.pressedComponent.y_position()) >20))){this.pressedComponent.moveTo(x, y);this.pressedComponent = null;this.redraw();}}}}if(tool.equals("wire")){if(action.equals("pressed")){this.startX = x;this.startY = y;}if( action.equals("released")){this.wires.add(new Wire(startX, startY ,x ,y));this.redraw();Trace.println(this.wires.size());}}}public void redraw(){UI.clearGraphics();for(Wire wire : wires){wire.draw_wire();}for(Component component : components){component.redraw();}}public Component findComponentAt(double x, double y){for(Component comp : components){if(comp.on(x, y)){return comp;}}return null;}public Wire findWireAt(double x, double y){for(Wire wire : wires){if(wire.on_wire(x, y)){return wire;}}return null;}public void loadDrawing(){try{Scanner scan = new Scanner(new File(UIFileChooser.open()));while(scan.hasNext()){String line = scan.nextLine();Scanner sc = new Scanner(line);String type = sc.next();if(type.equals("wire")){double x1 = (sc.nextDouble());double y1 = (sc.nextDouble());double x2 = (sc.nextDouble());double y2 = (sc.nextDouble());this.wires.add(new Wire(x1, y1 ,x2 ,y2));}else{double x = sc.nextDouble();double y = sc.nextDouble();boolean orientation = Boolean.parseBoolean(sc.next());if(sc.hasNext()){String label = sc.nextLine();this.components.add(new Component(type, x, y, orientation, label));}else{Component comp = new Component(type, x, y);if(orientation != true){comp.rotate();}this.components.add(comp);}}sc.close();}scan.close();}catch(IOException e){}this.redraw();}public void saveDrawing(){try{PrintStream print = new PrintStream(new File(UI.askString("name the file")));for(Wire wire : wires){print.println(wire.toString());}for(Component comp : components){print.println(comp.toString());}}catch(IOException e){}}public static void main(String[] arguments){new CircuitEditor();}}
