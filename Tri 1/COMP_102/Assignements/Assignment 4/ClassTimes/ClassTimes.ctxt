#BlueJ class context
comment0.target=ClassTimes
comment1.params=
comment1.target=void\ printAll()
comment1.text=\r\n\ Reads\ the\ class\ timetable\ file,\ printing\ out\ each\ line.\r\n\ This\ method\ is\ very\ straightforward,\ and\ there\ are\ very\ similar\r\n\ examples\ in\ the\ lecture\ notes.\r\n
comment10.params=
comment10.target=void\ doBookingsFileForRoom()
comment10.text=\ Completion\ 2\r\n\ Writes\ a\ new\ file\ listing\ all\ the\ class\ bookings\ that\ are\ in\ a\ given\ room.\r\n\ \ The\ name\ of\ the\ new\ file\ should\ be\ the\ room,\ followed\ by\ "_Bookings.txt"\r\n\ \ The\ first\ line\ of\ the\ file\ should\ specify\ what\ room\ the\ bookings\ are\ for\:\r\n\ \ "Bookings\ for\ room\ <room\ name>"\r\n\r\n\ \ Each\ class\ booking\ should\ be\ formatted\ in\ three\ lines,\ with\ a\ blank\ line\ after.\r\n\ \ Course\:\ <Course\ Code>\r\n\ \ Time\:\ <Day>\ <Start\ Time>-<End\ Time>\r\n\ \ Session\:\ <Type>\r\n\r\n\ \ For\ example,\ if\ the\ targetRoom\ is\ VZ515,\ then\ the\ start\ of\ the\ file\ would\ be\ as\ follows\r\n\r\n\ \ Bookings\ for\ room\ VZ515\r\n\ \ ----------------------------------\r\n\ \ Course\:\ ACCY111\r\n\ \ Time\:\ Tue\ 1000-1050\r\n\ \ Session\:\ Tutorial\r\n\r\n\ \ Course\:\ ACCY130\r\n\ \ Time\:\ Thu\ 1310-1400\r\n\ \ Session\:\ Tutorial\r\n\r\n\ \ Course\:\ ACCY130\r\n\ \ Time\:\ Tue\ 1310-1400\r\n\ \ Session\:\ Tutorial\r\n\r\n
comment11.params=targetRoom
comment11.target=void\ bookingsFileForRoom(java.lang.String)
comment12.params=
comment12.target=void\ doInBuildingAfterTime()
comment12.text=\ Completion\ 3\r\n\ Lists\ all\ the\ classes\ (just\ list\ the\ course\ code,\ type,\ and\ room)\ that\ are\r\n\ \ in\ the\ specified\ building\ (given\ by\ its\ abbreviation)\r\n\ \ on\ the\ specified\ day,\ and\ start\ at\ or\ after\ the\ specified\ start\ time\r\n\ Note,\ the\ first\ part\ of\ every\ room\ name\ is\ an\ uppercase\ abbreviation\ of\ the\ building.\r\n
comment13.params=targetBuilding\ targetDay\ targetStart
comment13.target=void\ inBuildingAfterTime(java.lang.String,\ java.lang.String,\ int)
comment14.params=
comment14.target=void\ doMeanClassLength()
comment14.text=\ Challenge\ 1\r\n\ Computes\ and\ returns\ the\ average\ (mean)\ duration\ in\ minutes\ of\ all\ classes\ scheduled\r\n\ in\ a\ specified\ room.\r\n\ Hint\:\ be\ careful\ with\ the\ times\r\n\ Hint\:\ if\ there\ are\ no\ classes\ in\ the\ room,\ do\ not\ cause\ an\ error.\r\n
comment15.params=targetRoom
comment15.target=double\ meanClassLength(java.lang.String)
comment16.params=
comment16.target=java.lang.String\ askDay()
comment16.text=Asks\ the\ user\ for\ a\ Day\ and\ returns\ as\ a\ capitalised\ three\ letter\ string
comment2.params=
comment2.target=void\ doPrintCourse()
comment2.text=\ Core\ 1\r\n\ Read\ the\ class\ timetable\ file,\ printing\ out\ (to\ the\ text\ pane)\r\n\ the\ class\ type,\ day,\ start\ time,\ end\ time,\ and\ room\r\n\ for\ each\ class\ with\ the\ target\ course.\r\n\ Print\ a\ message\ if\ there\ are\ no\ classes\ for\ the\ course.\r\n
comment3.params=targetCourse
comment3.target=void\ printCourse(java.lang.String)
comment4.params=
comment4.target=void\ doPrintRoom()
comment4.text=\ Core\ 2\r\n\ Print\ out\ the\ name\ of\ the\ target\ room,\ and\ underline\ it.\r\n\ Then\ read\ the\ class\ timetable\ file,\ printing\ out\ (to\ the\ text\ pane)\r\n\ \ the\ course\ code,\ class\ type,\ day,\ start\ time,\ end\ time\r\n\ \ for\ each\ class\ in\ the\ target\ room.\r\n\ It\ will\ be\ best\ to\ read\ the\ six\ tokens\ on\ each\ line\ individually.\r\n
comment5.params=targetRoom
comment5.target=void\ printRoom(java.lang.String)
comment6.params=
comment6.target=void\ doPrintAtStartTime()
comment6.text=\ Core\ 3\r\n\ Prints\ out\ the\ start\ time\ and\ underlines\ it,\ then\r\n\ Reads\ the\ class\ timetable\ file,\ printing\ out\ (to\ the\ text\ pane)\r\n\ the\ course\ code,\ class\ type,\ room,\ day\ and\ end\ time\ for\r\n\ each\ class\ that\ starts\ at\ the\ target\ time.\r\n\ It\ will\ be\ best\ to\ read\ the\ six\ tokens\ on\ each\ line\ individually.\r\n
comment7.params=startTime
comment7.target=void\ printAtStartTime(int)
comment8.params=
comment8.target=void\ doPrintInRoomsOnDay()
comment8.text=\ Completion\ 1\r\n\ Prints\ a\ title\ containing\ its\ arguments,\ and\ then\r\n\ Reads\ the\ class\ timetable\ file,\ printing\ out\ (to\ the\ text\ pane)\r\n\ the\ course\ code,\ class\ type,\ day,\ start\ and\ end\ time\r\n\ for\ each\ class\ that\ is\ in\ targetRoom1\ or\ targetRoom2\ and\ is\ on\ targetDay\r\n\ It\ will\ be\ best\ to\ read\ the\ six\ tokens\ on\ each\ line\ individually.\r\n
comment9.params=targetRoom1\ targetRoom2\ targetDay
comment9.target=void\ printInRoomsOnDay(java.lang.String,\ java.lang.String,\ java.lang.String)
numComments=17
